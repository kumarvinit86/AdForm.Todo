// <auto-generated />
using System;
using Adform.Todo.Database.Sql.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adform.Todo.Database.Sql.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20211020114853_initialize_db")]
    partial class initialize_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToDoListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("ToDoListId");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsComplete = false,
                            LabelId = 1,
                            Name = "None",
                            ToDoListId = 1,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 10, 20, 17, 18, 51, 258, DateTimeKind.Local).AddTicks(4988),
                            LabelId = 1,
                            Name = "None",
                            UpdatedDate = new DateTime(2021, 10, 20, 17, 18, 51, 259, DateTimeKind.Local).AddTicks(8346),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.TodoLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "None"
                        });
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "default",
                            Password = "AKDS+52ehoM="
                        },
                        new
                        {
                            Id = 2,
                            Name = "admin",
                            Password = "AKDS+52ehoM="
                        });
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoItem", b =>
                {
                    b.HasOne("Adform.Todo.Model.Entity.TodoLabel", "Label")
                        .WithOne("TodoItem")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoItem", "LabelId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("Adform.Todo.Model.Entity.ToDoList", "ToDoItemList")
                        .WithMany("TodoItems")
                        .HasForeignKey("ToDoListId");

                    b.HasOne("Adform.Todo.Model.Entity.User", "Author")
                        .WithOne("TodoItem")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoItem", "UserId");

                    b.Navigation("Author");

                    b.Navigation("Label");

                    b.Navigation("ToDoItemList");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.HasOne("Adform.Todo.Model.Entity.TodoLabel", "Label")
                        .WithOne("TodoList")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoList", "LabelId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("Adform.Todo.Model.Entity.User", "Author")
                        .WithOne("TodoList")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoList", "UserId");

                    b.Navigation("Author");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.Navigation("TodoItems");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.TodoLabel", b =>
                {
                    b.Navigation("TodoItem");

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.User", b =>
                {
                    b.Navigation("TodoItem");

                    b.Navigation("TodoList");
                });
#pragma warning restore 612, 618
        }
    }
}
