// <auto-generated />
using System;
using Adform.Todo.Database.Sql.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adform.Todo.Database.Sql.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20211015114620_todo_database")]
    partial class todo_database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToDoListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabelId")
                        .IsUnique()
                        .HasFilter("[LabelId] IS NOT NULL");

                    b.HasIndex("ToDoListId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("UserId");

                    b.ToTable("ToDoLists");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.TodoLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoItem", b =>
                {
                    b.HasOne("Adform.Todo.Model.Entity.TodoLabel", "Label")
                        .WithOne("TodoItem")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoItem", "LabelId");

                    b.HasOne("Adform.Todo.Model.Entity.ToDoList", "ToDoItemList")
                        .WithMany("TodoItems")
                        .HasForeignKey("ToDoListId");

                    b.HasOne("Adform.Todo.Model.Entity.User", "Author")
                        .WithOne("TodoItem")
                        .HasForeignKey("Adform.Todo.Model.Entity.ToDoItem", "UserId");

                    b.Navigation("Author");

                    b.Navigation("Label");

                    b.Navigation("ToDoItemList");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.HasOne("Adform.Todo.Model.Entity.TodoLabel", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("Adform.Todo.Model.Entity.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Author");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.ToDoList", b =>
                {
                    b.Navigation("TodoItems");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.TodoLabel", b =>
                {
                    b.Navigation("TodoItem");
                });

            modelBuilder.Entity("Adform.Todo.Model.Entity.User", b =>
                {
                    b.Navigation("TodoItem");
                });
#pragma warning restore 612, 618
        }
    }
}
